{"version":3,"sources":["google-analytics-universal-tracker.js","govuk-tracker.js","analytics.js","external-link-tracker.js","form-error-tracker.js"],"names":["global","GoogleAnalyticsUniversalTracker","trackingId","fieldsObject","cookieDomain","sendToGa","string","replace","stripEmailAddressesFromString","window","location","href","$","jQuery","GOVUK","ga","apply","arguments","load","i","s","o","r","a","m","document","q","push","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","prototype","trackPageview","path","title","options","pageviewObject","page","extend","isEmptyObject","trackEvent","category","action","value","evt","hitType","eventCategory","eventAction","label","eventLabel","parseInt","isNaN","eventValue","nonInteraction","trackSocial","network","target","trackingOptions","socialNetwork","socialAction","socialTarget","addLinkedTrackerDomain","trackerId","name","domain","setDimension","index","String","GOVUKTracker","gifUrl","this","dimensions","sendToTracker","toString","payloadParams","type","payload","data","eventType","referrer","gaClientId","windowWidth","innerWidth","windowHeight","innerHeight","screenWidth","screen","width","screenHeight","height","colorDepth","performance","k","navigationType","navigation","redirectCount","timing","v","sendData","params","url","param","get","ready","tracker","bind","Analytics","config","stripDatePII","stripPostcodePII","trackers","universalId","govukTrackerUrl","EMAIL_PATTERN","POSTCODE_PATTERN","DATE_PATTERN","PIISafe","stripPII","stripPIIFromString","Object","call","stripPIIFromArray","stripPIIFromObject","stripped","object","property","array","length","elem","sendToTrackers","method","args","fn","defaultPathForTrackPageview","substring","origin","split","trackShare","pathname","analyticsPlugins","externalLinkTracker","externalLinkUploadCustomDimension","externalLinkSelector","getHostname","on","$link","$target","is","parents","getLinkFromEvent","transport","attr","linkText","trim","text","undefined","externalLinkToJoinUploadOn","analytics","hostname","formErrorTracker","errors","trackError","error","$error","errorText","errorID","questionText","legendText","$element","elementID","prop","nodeName","getElementById","toLowerCase","closest","find","getQuestionText","optionsGlobal","analyticsSetup","gaConfig","sessionId","ANONYMOUS_SESSION_ID","releaseTag","RELEASE_TAG","pageviewOptions"],"mappings":"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","file":"custom-analytics.js","sourcesContent":[";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  var GoogleAnalyticsUniversalTracker = function (trackingId, fieldsObject) {\n    function configureProfile () {\n      // https://developers.google.com/analytics/devguides/collection/analyticsjs/command-queue-reference#create\n      sendToGa('create', trackingId, fieldsObject)\n    }\n\n    function anonymizeIp () {\n      // https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced#anonymizeip\n      sendToGa('set', 'anonymizeIp', true)\n    }\n\n    function disableAdTracking () {\n      // https://support.google.com/analytics/answer/2444872?hl=en\n      sendToGa('set', 'displayFeaturesTask', null)\n    }\n\n    function stripLocationPII () {\n      sendToGa('set', 'location', stripEmailAddressesFromString(window.location.href))\n    }\n\n    // Support legacy cookieDomain param\n    if (typeof fieldsObject === 'string') {\n      fieldsObject = { cookieDomain: fieldsObject }\n    }\n\n    configureProfile()\n    anonymizeIp()\n    disableAdTracking()\n    stripLocationPII()\n  }\n\n  GoogleAnalyticsUniversalTracker.load = function () {\n    /* eslint-disable */\n    (function (i, s, o, g, r, a, m) { i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n      (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),\n                             m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)\n    })(global, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga')\n    /* eslint-enable */\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/pages\n  GoogleAnalyticsUniversalTracker.prototype.trackPageview = function (path, title, options) {\n    var pageviewObject\n\n    if (typeof path === 'string') {\n      pageviewObject = { page: path }\n    }\n\n    if (typeof title === 'string') {\n      pageviewObject = pageviewObject || {}\n      pageviewObject.title = title\n    }\n\n    // Set an options object for the pageview (e.g. transport, sessionControl)\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport\n    if (typeof options === 'object') {\n      pageviewObject = $.extend(pageviewObject || {}, options)\n    }\n\n    if (!$.isEmptyObject(pageviewObject)) {\n      sendToGa('send', 'pageview', pageviewObject)\n    } else {\n      sendToGa('send', 'pageview')\n    }\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n  GoogleAnalyticsUniversalTracker.prototype.trackEvent = function (category, action, options) {\n    options = options || {}\n    var value\n    var evt = {\n      hitType: 'event',\n      eventCategory: category,\n      eventAction: action\n    }\n\n    // Label is optional\n    if (typeof options.label === 'string') {\n      evt.eventLabel = options.label\n      delete options.label\n    }\n\n    // Value is optional, but when used must be an\n    // integer, otherwise the event will be invalid\n    // and not logged\n    if (options.value || options.value === 0) {\n      value = parseInt(options.value, 10)\n      if (typeof value === 'number' && !isNaN(value)) {\n        options.eventValue = value\n      }\n      delete options.value\n    }\n\n    // Prevents an event from affecting bounce rate\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/events#implementation\n    if (options.nonInteraction) {\n      options.nonInteraction = 1\n    }\n\n    if (typeof options === 'object') {\n      $.extend(evt, options)\n    }\n\n    sendToGa('send', evt)\n  }\n\n  /*\n    https://developers.google.com/analytics/devguides/collection/analyticsjs/social-interactions\n    network – The network on which the action occurs (e.g. Facebook, Twitter)\n    action – The type of action that happens (e.g. Like, Send, Tweet)\n    target – Specifies the target of a social interaction.\n             This value is typically a URL but can be any text.\n  */\n  GoogleAnalyticsUniversalTracker.prototype.trackSocial = function (network, action, target, options) {\n    var trackingOptions = {\n      'hitType': 'social',\n      'socialNetwork': network,\n      'socialAction': action,\n      'socialTarget': target\n    }\n\n    $.extend(trackingOptions, options)\n\n    sendToGa('send', trackingOptions)\n  }\n\n  /*\n   https://developers.google.com/analytics/devguides/collection/analyticsjs/cross-domain\n   trackerId - the UA account code to track the domain against\n   name      - name for the tracker\n   domain    - the domain to track\n  */\n  GoogleAnalyticsUniversalTracker.prototype.addLinkedTrackerDomain = function (trackerId, name, domain) {\n    sendToGa('create',\n             trackerId,\n             'auto',\n             {'name': name})\n    // Load the plugin.\n    sendToGa('require', 'linker')\n    sendToGa(name + '.require', 'linker')\n\n    // Define which domains to autoLink.\n    sendToGa('linker:autoLink', [domain])\n    sendToGa(name + '.linker:autoLink', [domain])\n\n    sendToGa(name + '.set', 'anonymizeIp', true)\n    sendToGa(name + '.set', 'displayFeaturesTask', null)\n    sendToGa(name + '.send', 'pageview')\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets\n  GoogleAnalyticsUniversalTracker.prototype.setDimension = function (index, value) {\n    sendToGa('set', 'dimension' + index, String(value))\n  }\n\n  function sendToGa () {\n    if (typeof global.ga === 'function') {\n      global.ga.apply(global, arguments)\n    }\n  }\n\n  function stripEmailAddressesFromString (string) {\n    var stripped = string.replace(/[^\\s=/?&]+(?:@|%40)[^\\s=/?&]+/g, '[email]')\n    return stripped\n  }\n\n  GOVUK.GoogleAnalyticsUniversalTracker = GoogleAnalyticsUniversalTracker\n\n  global.GOVUK = GOVUK\n})(window)\n",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  var GOVUKTracker = function (gifUrl) {\n    this.gifUrl = gifUrl\n    this.dimensions = []\n  }\n\n  GOVUKTracker.load = function () {}\n\n  GOVUKTracker.prototype.trackPageview = function (path, title, options) {\n    var pageviewObject\n\n    if (typeof path === 'string') {\n      pageviewObject = { page: path }\n    }\n\n    if (typeof title === 'string') {\n      pageviewObject = pageviewObject || {}\n      pageviewObject.title = title\n    }\n\n    // Set an options object for the pageview (e.g. transport, sessionControl)\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport\n    if (typeof options === 'object') {\n      pageviewObject = $.extend(pageviewObject || {}, options)\n    }\n\n    if (!$.isEmptyObject(pageviewObject)) {\n      this.sendToTracker('pageview', pageviewObject)\n    } else {\n      this.sendToTracker('pageview')\n    }\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n  GOVUKTracker.prototype.trackEvent = function (category, action, options) {\n    options = options || {}\n    var evt = {\n      eventCategory: category,\n      eventAction: action\n    }\n\n    if (options.label) {\n      evt.eventLabel = options.label\n      delete options.label\n    }\n\n    if (options.value) {\n      evt.eventValue = options.value.toString()\n      delete options.value\n    }\n\n    if (typeof options === 'object') {\n      $.extend(evt, options)\n    }\n\n    this.sendToTracker('event', evt)\n  }\n\n  GOVUKTracker.prototype.trackSocial = function (network, action, target, options) {\n    var trackingOptions = {\n      'socialNetwork': network,\n      'socialAction': action,\n      'socialTarget': target\n    }\n\n    $.extend(trackingOptions, options)\n\n    this.sendToTracker('social', trackingOptions)\n  }\n\n  GOVUKTracker.prototype.addLinkedTrackerDomain = function () { /* noop */ }\n\n  GOVUKTracker.prototype.setDimension = function (index, value) {\n    this.dimensions['dimension' + index] = value\n  }\n\n  GOVUKTracker.prototype.payloadParams = function (type, payload) {\n    var data = $.extend({},\n      payload,\n      this.dimensions,\n      {\n        eventType: type,\n        referrer: global.document.referrer,\n        gaClientId: this.gaClientId,\n        windowWidth: global.innerWidth,\n        windowHeight: global.innerHeight,\n        screenWidth: global.screen.width,\n        screenHeight: global.screen.height,\n        colorDepth: global.screen.colorDepth\n      }\n    )\n\n    if (global.performance) {\n      data.navigationType = global.performance.navigation.type.toString()\n      data.redirectCount = global.performance.navigation.redirectCount.toString()\n\n      for (var k in global.performance.timing) {\n        var v = global.performance.timing[k]\n        if (typeof v === 'string' || typeof v === 'number') {\n          data['timing_' + k] = v.toString()\n        }\n      }\n    }\n\n    return data\n  }\n\n  GOVUKTracker.prototype.sendData = function (params) {\n    var url = this.gifUrl + '?' + $.param(params)\n    $.get(url)\n  }\n\n  GOVUKTracker.prototype.sendToTracker = function (type, payload) {\n    $(global.document).ready(function () {\n      if (global.ga) {\n        global.ga(function (tracker) {\n          this.gaClientId = tracker.get('clientId')\n          this.sendData(this.payloadParams(type, payload))\n        }.bind(this))\n      } else {\n        this.sendData(this.payloadParams(type, payload))\n      }\n    }.bind(this))\n  }\n\n  GOVUK.GOVUKTracker = GOVUKTracker\n\n  global.GOVUK = GOVUK\n})(window)\n",";GOVUK.analyticsSetup = function(global) {\n  \"use strict\";\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n  var gaConfig = global.gaConfig || {}\n\n  // Load Google Analytics libraries\n  GOVUK.Analytics.load();\n\n  // Use document.domain in dev, preview and staging so that tracking works\n  // Otherwise explicitly set the domain as powerofattorneyrefund.service.justice.gov.uk.\n  var cookieDomain = (document.domain === 'powerofattorneyrefund.service.justice.gov.uk') ? '.powerofattorneyrefund.service.justice.gov.uk' : document.domain;\n\n  // Configure profiles and make interface public\n  // for custom dimensions, virtual pageviews and events\n  GOVUK.analytics = new GOVUK.Analytics({\n    universalId: gaConfig.universalId  || '',\n    cookieDomain: cookieDomain\n  });\n\n  // Set custom dimensions before tracking pageviews\n  if (typeof gaConfig.sessionId !== 'undefined') {\n    GOVUK.analytics.setDimension(gaConfig.dimensions.ANONYMOUS_SESSION_ID, gaConfig.sessionId)\n  }\n\n  if (typeof gaConfig.releaseTag !== 'undefined') {\n    GOVUK.analytics.setDimension(gaConfig.dimensions.RELEASE_TAG, gaConfig.releaseTag)\n  }\n  \n  // Activate any event plugins eg. print intent, error tracking\n  GOVUK.analyticsPlugins.formErrorTracker();\n  GOVUK.analyticsPlugins.externalLinkTracker();\n  \n  // Track initial pageview\n  if (typeof GOVUK.pageviewOptions !== 'undefined') {\n    GOVUK.analytics.trackPageview(null, null, GOVUK.pageviewOptions);\n  }\n  else {\n    GOVUK.analytics.trackPageview();\n  }\n\n};\n\nGOVUK.analyticsSetup(window)",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  GOVUK.analyticsPlugins = GOVUK.analyticsPlugins || {}\n  GOVUK.analyticsPlugins.externalLinkTracker = function (options) {\n    options = options || {}\n    var externalLinkUploadCustomDimension = options.externalLinkUploadCustomDimension\n    var currentHost = GOVUK.analyticsPlugins.externalLinkTracker.getHostname()\n    var externalLinkSelector = 'a[href^=\"http\"]:not(a[href*=\"' + currentHost + '\"])'\n\n    $('body').on('click', externalLinkSelector, trackClickEvent)\n\n    function trackClickEvent (evt) {\n      var $link = getLinkFromEvent(evt)\n      var options = {transport: 'beacon'}\n      var href = $link.attr('href')\n      var linkText = $.trim($link.text())\n\n      if (linkText) {\n        options.label = linkText\n      }\n\n      if (externalLinkUploadCustomDimension !== undefined) {\n        // This custom dimension will be used to duplicate the url information\n        // that we normally send in an \"event action\". This will be used to join\n        // up with a scheduled custom upload called \"External Link Status\".\n        // We can only join uploads on custom dimensions, not on `event actions`\n        // where we normally add the url info.\n        var externalLinkToJoinUploadOn = href\n\n        GOVUK.analytics.setDimension(externalLinkUploadCustomDimension, externalLinkToJoinUploadOn)\n      }\n\n      GOVUK.analytics.trackEvent('External Link Clicked', href, options)\n    }\n\n    function getLinkFromEvent (evt) {\n      var $target = $(evt.target)\n\n      if (!$target.is('a')) {\n        $target = $target.parents('a')\n      }\n\n      return $target\n    }\n  }\n\n  GOVUK.analyticsPlugins.externalLinkTracker.getHostname = function () {\n    return global.location.hostname\n  }\n\n  global.GOVUK = GOVUK\n})(window)\n",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  GOVUK.analyticsPlugins = GOVUK.analyticsPlugins || {}\n  GOVUK.analyticsPlugins.formErrorTracker = function () {\n\n    var errorSummarySelector = '.error-summary-list a'\n\n    var errors = $('.error-summary-list li a')\n    for (var i = 0; i < errors.length; i++) {\n      trackError(errors[i])  \n    }\n\n    function trackError(error) {\n      var $error = $(error)\n      var errorText = $.trim($error.text())\n      var errorID = $error.attr('href')\n      var questionText = getQuestionText(error)\n\n      var actionLabel = errorID + ' - ' + errorText\n\n      var options = {\n        transport: 'beacon',\n        label: actionLabel\n      }\n\n      window.optionsGlobal = options\n\n      GOVUK.analytics.trackEvent('Error-field', questionText, options)\n    }\n\n    function getQuestionText(error) {\n      var $error = $(error)\n      var errorID = $error.attr('href')\n\n      var $element = $(errorID)\n      var isLegend = $element.is(\"legend\")      \n      var isInput = $element.is(\"input\")\n\n      var elementID = $element.prop('id')\n\n      var nodeName = document.getElementById(elementID).nodeName.toLowerCase()\n      var questionText\n      var legendText\n\n      if (nodeName === 'input') {\n        questionText = $.trim($('label[for=\"' + elementID + '\"] .question-text').text())\n        legendText = $.trim($element.closest('fieldset').find('legend').text())\n        questionText = legendText.length > 0 ? legendText + ': ' + questionText : questionText\n      }\n      else if (nodeName === 'legend') {\n        questionText = $.trim($element.find('.question-text').text())\n      }\n\n      return questionText\n    }\n  }\n\n  global.GOVUK = GOVUK\n})(window)\n"]}