{"version":3,"sources":["moj.ga-tracker.js","govuk-tracker.js","analytics.js","external-link-tracker.js","form-error-tracker.js"],"names":["global","GoogleAnalyticsUniversalTracker","trackingId","fieldsObject","this","trackerDomains","cookieDomain","sendToGa","$","jQuery","GOVUK","ga","apply","arguments","load","i","s","o","r","a","m","document","q","push","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","prototype","trackPageview","path","title","options","pageviewObject","page","extend","isEmptyObject","length","trackEvent","category","action","value","evt","hitType","eventCategory","eventAction","label","eventLabel","parseInt","isNaN","eventValue","nonInteraction","trackSocial","network","target","trackingOptions","socialNetwork","socialAction","socialTarget","addLinkedTrackerDomain","trackerId","name","domain","allowLinker","Array","isArray","setDimension","index","String","window","GOVUKTracker","gifUrl","dimensions","sendToTracker","toString","payloadParams","type","payload","data","eventType","referrer","gaClientId","windowWidth","innerWidth","windowHeight","innerHeight","screenWidth","screen","width","screenHeight","height","colorDepth","performance","k","navigationType","navigation","redirectCount","timing","v","sendData","params","url","param","get","ready","tracker","bind","Analytics","config","stripDatePII","stripPostcodePII","trackers","universalId","govukTrackerUrl","EMAIL_PATTERN","POSTCODE_PATTERN","DATE_PATTERN","PIISafe","stripPII","stripPIIFromString","Object","call","stripPIIFromArray","stripPIIFromObject","string","stripped","replace","object","property","array","elem","sendToTrackers","method","args","fn","defaultPathForTrackPageview","location","href","substring","origin","split","trackShare","pathname","analyticsPlugins","externalLinkTracker","externalLinkUploadCustomDimension","externalLinkSelector","getHostname","on","$link","$target","is","parents","getLinkFromEvent","transport","attr","linkText","trim","text","undefined","externalLinkToJoinUploadOn","analytics","hostname","formErrorTracker","errors","trackError","error","$error","errorText","errorID","questionText","legendText","$element","elementID","prop","nodeName","getElementById","toLowerCase","closest","find","getQuestionText","optionsGlobal","analyticsSetup","gaConfig","checkConsentCookieCategory","prodDomain","RegExp","test","allowAnchor","sessionId","ANONYMOUS_SESSION_ID","releaseTag","RELEASE_TAG","govId","pageviewOptions"],"mappings":"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","file":"custom-analytics.js","sourcesContent":[";(function (global) {\n    'use strict'\n\n    var $ = global.jQuery\n    var GOVUK = global.GOVUK || {}\n\n    var GoogleAnalyticsUniversalTracker = function (trackingId, fieldsObject) {\n        this.trackerDomains = []\n\n        function configureProfile () {\n            // https://developers.google.com/analytics/devguides/collection/analyticsjs/command-queue-reference#create\n            sendToGa('create', trackingId, fieldsObject)\n        }\n\n        function anonymizeIp () {\n            // https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced#anonymizeip\n            sendToGa('set', 'anonymizeIp', true)\n        }\n\n        function disableAdTracking () {\n            // https://support.google.com/analytics/answer/2444872?hl=en\n            sendToGa('set', 'displayFeaturesTask', null)\n        }\n\n        // Support legacy cookieDomain param\n        if (typeof fieldsObject === 'string') {\n            fieldsObject = { cookieDomain: fieldsObject }\n        }\n\n        configureProfile()\n        anonymizeIp()\n        disableAdTracking()\n    }\n\n    GoogleAnalyticsUniversalTracker.load = function () {\n        /* eslint-disable */\n        (function (i, s, o, g, r, a, m) { i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n            (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),\n            m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)\n        })(global, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga')\n        /* eslint-enable */\n    }\n\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/pages\n    GoogleAnalyticsUniversalTracker.prototype.trackPageview = function (path, title, options) {\n        var pageviewObject\n\n        if (typeof path === 'string') {\n            pageviewObject = { page: path }\n        }\n\n        if (typeof title === 'string') {\n            pageviewObject = pageviewObject || {}\n            pageviewObject.title = title\n        }\n\n        // Set an options object for the pageview (e.g. transport, sessionControl)\n        // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport\n        if (typeof options === 'object') {\n            pageviewObject = $.extend(pageviewObject || {}, options)\n        }\n\n        if (!$.isEmptyObject(pageviewObject)) {\n            sendToGa('send', 'pageview', pageviewObject)\n            for (var i = 0, l = this.trackerDomains.length; i < l; i++) {\n                var domain = this.trackerDomains[i]\n                sendToGa(domain +'.send', 'pageview', pageviewObject)\n            }\n        } else {\n            sendToGa('send', 'pageview')\n            for (var i = 0, l = this.trackerDomains.length; i < l; i++) {\n                var domain = this.trackerDomains[i]\n                sendToGa(domain +'.send', 'pageview')\n            }\n        }\n    }\n\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n    GoogleAnalyticsUniversalTracker.prototype.trackEvent = function (category, action, options) {\n        options = options || {}\n        var value\n        var evt = {\n            hitType: 'event',\n            eventCategory: category,\n            eventAction: action\n        }\n\n        // Label is optional\n        if (typeof options.label === 'string') {\n            evt.eventLabel = options.label\n            delete options.label\n        }\n\n        // Value is optional, but when used must be an\n        // integer, otherwise the event will be invalid\n        // and not logged\n        if (options.value || options.value === 0) {\n            value = parseInt(options.value, 10)\n            if (typeof value === 'number' && !isNaN(value)) {\n                options.eventValue = value\n            }\n            delete options.value\n        }\n\n        // Prevents an event from affecting bounce rate\n        // https://developers.google.com/analytics/devguides/collection/analyticsjs/events#implementation\n        if (options.nonInteraction) {\n            options.nonInteraction = 1\n        }\n\n        if (typeof options === 'object') {\n            $.extend(evt, options)\n        }\n\n        sendToGa('send', evt)\n    }\n\n    /*\n      https://developers.google.com/analytics/devguides/collection/analyticsjs/social-interactions\n      network – The network on which the action occurs (e.g. Facebook, Twitter)\n      action – The type of action that happens (e.g. Like, Send, Tweet)\n      target – Specifies the target of a social interaction.\n               This value is typically a URL but can be any text.\n    */\n    GoogleAnalyticsUniversalTracker.prototype.trackSocial = function (network, action, target, options) {\n        var trackingOptions = {\n            'hitType': 'social',\n            'socialNetwork': network,\n            'socialAction': action,\n            'socialTarget': target\n        }\n\n        $.extend(trackingOptions, options)\n\n        sendToGa('send', trackingOptions)\n    }\n\n    /*\n     https://developers.google.com/analytics/devguides/collection/analyticsjs/cross-domain\n     trackerId - the UA account code to track the domain against\n     name      - name for the tracker\n     domain    - the domain to track\n    */\n    GoogleAnalyticsUniversalTracker.prototype.addLinkedTrackerDomain = function (trackerId, name, domain) {\n        this.trackerDomains.push([name])\n\n        sendToGa('create', {\n            'trackingId': trackerId,\n            'cookieDomain': 'auto',\n            'name': name,\n            'allowLinker': true\n        })\n\n        // Load the plugin.\n        sendToGa(name + '.require', 'linker')\n\n        // Define which domains to autoLink.\n        domain = Array.isArray(domain) ? domain : [domain]\n        sendToGa(name + '.linker:autoLink', domain)\n\n        sendToGa(name + '.set', 'anonymizeIp', true)\n        sendToGa(name + '.set', 'displayFeaturesTask', null)\n    }\n\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets\n    GoogleAnalyticsUniversalTracker.prototype.setDimension = function (index, value) {\n        sendToGa('set', 'dimension' + index, String(value))\n    }\n\n    function sendToGa () {\n        if (typeof global.ga === 'function') {\n            global.ga.apply(global, arguments)\n        }\n    }\n\n    GOVUK.GoogleAnalyticsUniversalTracker = GoogleAnalyticsUniversalTracker\n\n    global.GOVUK = GOVUK\n})(window)\n",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  var GOVUKTracker = function (gifUrl) {\n    this.gifUrl = gifUrl\n    this.dimensions = []\n  }\n\n  GOVUKTracker.load = function () {}\n\n  GOVUKTracker.prototype.trackPageview = function (path, title, options) {\n    var pageviewObject\n\n    if (typeof path === 'string') {\n      pageviewObject = { page: path }\n    }\n\n    if (typeof title === 'string') {\n      pageviewObject = pageviewObject || {}\n      pageviewObject.title = title\n    }\n\n    // Set an options object for the pageview (e.g. transport, sessionControl)\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport\n    if (typeof options === 'object') {\n      pageviewObject = $.extend(pageviewObject || {}, options)\n    }\n\n    if (!$.isEmptyObject(pageviewObject)) {\n      this.sendToTracker('pageview', pageviewObject)\n    } else {\n      this.sendToTracker('pageview')\n    }\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n  GOVUKTracker.prototype.trackEvent = function (category, action, options) {\n    options = options || {}\n    var evt = {\n      eventCategory: category,\n      eventAction: action\n    }\n\n    if (options.label) {\n      evt.eventLabel = options.label\n      delete options.label\n    }\n\n    if (options.value) {\n      evt.eventValue = options.value.toString()\n      delete options.value\n    }\n\n    if (typeof options === 'object') {\n      $.extend(evt, options)\n    }\n\n    this.sendToTracker('event', evt)\n  }\n\n  GOVUKTracker.prototype.trackSocial = function (network, action, target, options) {\n    var trackingOptions = {\n      'socialNetwork': network,\n      'socialAction': action,\n      'socialTarget': target\n    }\n\n    $.extend(trackingOptions, options)\n\n    this.sendToTracker('social', trackingOptions)\n  }\n\n  GOVUKTracker.prototype.addLinkedTrackerDomain = function () { /* noop */ }\n\n  GOVUKTracker.prototype.setDimension = function (index, value) {\n    this.dimensions['dimension' + index] = value\n  }\n\n  GOVUKTracker.prototype.payloadParams = function (type, payload) {\n    var data = $.extend({},\n      payload,\n      this.dimensions,\n      {\n        eventType: type,\n        referrer: global.document.referrer,\n        gaClientId: this.gaClientId,\n        windowWidth: global.innerWidth,\n        windowHeight: global.innerHeight,\n        screenWidth: global.screen.width,\n        screenHeight: global.screen.height,\n        colorDepth: global.screen.colorDepth\n      }\n    )\n\n    if (global.performance) {\n      data.navigationType = global.performance.navigation.type.toString()\n      data.redirectCount = global.performance.navigation.redirectCount.toString()\n\n      for (var k in global.performance.timing) {\n        var v = global.performance.timing[k]\n        if (typeof v === 'string' || typeof v === 'number') {\n          data['timing_' + k] = v.toString()\n        }\n      }\n    }\n\n    return data\n  }\n\n  GOVUKTracker.prototype.sendData = function (params) {\n    var url = this.gifUrl + '?' + $.param(params)\n    $.get(url)\n  }\n\n  GOVUKTracker.prototype.sendToTracker = function (type, payload) {\n    $(global.document).ready(function () {\n      if (global.ga) {\n        global.ga(function (tracker) {\n          this.gaClientId = tracker.get('clientId')\n          this.sendData(this.payloadParams(type, payload))\n        }.bind(this))\n      } else {\n        this.sendData(this.payloadParams(type, payload))\n      }\n    }.bind(this))\n  }\n\n  GOVUK.GOVUKTracker = GOVUKTracker\n\n  global.GOVUK = GOVUK\n})(window)\n",";GOVUK.analyticsSetup = function(global) {\n  \"use strict\";\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n  var gaConfig = global.gaConfig || {}\n\n  // Check if we have permission to enable tracking\n  if (typeof GOVUK.checkConsentCookieCategory !== 'function'\n      || !GOVUK.checkConsentCookieCategory('analytics', 'usage')) {\n    return; // no permission\n  }\n\n  // Load Google Analytics libraries\n  GOVUK.Analytics.load();\n\n  // Use document.domain in dev, preview and staging so that tracking works\n  // Otherwise explicitly set the domain as .claim-power-of-attorney-refund.service.gov.uk.\n  var prodDomain = new RegExp('^(www\\.)*claim-power-of-attorney-refund\\.service\\.gov\\.uk$')\n  var cookieDomain = prodDomain.test(document.domain) ? '.claim-power-of-attorney-refund.service.gov.uk' : document.domain;\n\n  // Configure profiles and make interface public\n  // for custom dimensions, virtual pageviews and events\n  GOVUK.analytics = new GOVUK.Analytics({\n    universalId: gaConfig.universalId  || '',\n    cookieDomain: cookieDomain,\n    allowLinker: true,\n    allowAnchor: true,\n\n    //TODO are we tracking this within lpa\n    stripPostcodePII: true,\n    stripDatePII: true\n  });\n\n  // Set custom dimensions before tracking pageviews\n  if (typeof gaConfig.sessionId !== 'undefined') {\n    GOVUK.analytics.setDimension(gaConfig.dimensions.ANONYMOUS_SESSION_ID, gaConfig.sessionId)\n  }\n\n  if (typeof gaConfig.releaseTag !== 'undefined') {\n    GOVUK.analytics.setDimension(gaConfig.dimensions.RELEASE_TAG, gaConfig.releaseTag)\n  }\n\n  if (prodDomain.test(document.domain)) {\n    GOVUK.analytics.addLinkedTrackerDomain(gaConfig.govId, 'govuk_shared', ['www.gov.uk'])\n  }\n  \n  // Activate any event plugins eg. print intent, error tracking\n  GOVUK.analyticsPlugins.formErrorTracker();\n  GOVUK.analyticsPlugins.externalLinkTracker();\n  \n  // Track initial pageview\n  if (typeof GOVUK.pageviewOptions !== 'undefined') {\n    GOVUK.analytics.trackPageview(null, null, GOVUK.pageviewOptions);\n  }\n  else {\n    GOVUK.analytics.trackPageview();\n  }\n\n};\n\nGOVUK.analyticsSetup(window);",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  GOVUK.analyticsPlugins = GOVUK.analyticsPlugins || {}\n  GOVUK.analyticsPlugins.externalLinkTracker = function (options) {\n    options = options || {}\n    var externalLinkUploadCustomDimension = options.externalLinkUploadCustomDimension\n    var currentHost = GOVUK.analyticsPlugins.externalLinkTracker.getHostname()\n    var externalLinkSelector = 'a[href^=\"http\"]:not(a[href*=\"' + currentHost + '\"])'\n\n    $('body').on('click', externalLinkSelector, trackClickEvent)\n\n    function trackClickEvent (evt) {\n      var $link = getLinkFromEvent(evt)\n      var options = {transport: 'beacon'}\n      var href = $link.attr('href')\n      var linkText = $.trim($link.text())\n\n      if (linkText) {\n        options.label = linkText\n      }\n\n      if (externalLinkUploadCustomDimension !== undefined) {\n        // This custom dimension will be used to duplicate the url information\n        // that we normally send in an \"event action\". This will be used to join\n        // up with a scheduled custom upload called \"External Link Status\".\n        // We can only join uploads on custom dimensions, not on `event actions`\n        // where we normally add the url info.\n        var externalLinkToJoinUploadOn = href\n\n        GOVUK.analytics.setDimension(externalLinkUploadCustomDimension, externalLinkToJoinUploadOn)\n      }\n\n      GOVUK.analytics.trackEvent('External Link Clicked', href, options)\n    }\n\n    function getLinkFromEvent (evt) {\n      var $target = $(evt.target)\n\n      if (!$target.is('a')) {\n        $target = $target.parents('a')\n      }\n\n      return $target\n    }\n  }\n\n  GOVUK.analyticsPlugins.externalLinkTracker.getHostname = function () {\n    return global.location.hostname\n  }\n\n  global.GOVUK = GOVUK\n})(window)\n",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  GOVUK.analyticsPlugins = GOVUK.analyticsPlugins || {}\n  GOVUK.analyticsPlugins.formErrorTracker = function () {\n\n    var errorSummarySelector = '.error-summary-list a'\n\n    var errors = $('.error-summary-list li a')\n    for (var i = 0; i < errors.length; i++) {\n      trackError(errors[i])  \n    }\n\n    function trackError(error) {\n      var $error = $(error)\n      var errorText = $.trim($error.text())\n      var errorID = $error.attr('href')\n      var questionText = getQuestionText(error)\n\n      var actionLabel = errorID + ' - ' + errorText\n\n      var options = {\n        transport: 'beacon',\n        label: actionLabel\n      }\n\n      window.optionsGlobal = options\n\n      GOVUK.analytics.trackEvent('Error-field', questionText, options)\n    }\n\n    function getQuestionText(error) {\n      var $error = $(error)\n      var errorID = $error.attr('href')\n\n      var $element = $(errorID)\n      var isLegend = $element.is(\"legend\")      \n      var isInput = $element.is(\"input\")\n\n      var elementID = $element.prop('id')\n\n      var nodeName = document.getElementById(elementID).nodeName.toLowerCase()\n      var questionText\n      var legendText\n\n      if (nodeName === 'input') {\n        questionText = $.trim($('label[for=\"' + elementID + '\"] .question-text').text())\n        legendText = $.trim($element.closest('fieldset').find('legend').text())\n        questionText = legendText.length > 0 ? legendText + ': ' + questionText : questionText\n      }\n      else if (nodeName === 'legend') {\n        questionText = $.trim($element.find('.question-text').text())\n      }\n\n      return questionText\n    }\n  }\n\n  global.GOVUK = GOVUK\n})(window)\n"]}