{"version":3,"sources":["google-analytics-universal-tracker.js","govuk-tracker.js","analytics.js","external-link-tracker.js","form-error-tracker.js"],"names":["global","$","jQuery","GOVUK","GoogleAnalyticsUniversalTracker","trackingId","fieldsObject","cookieDomain","sendToGa","ga","apply","arguments","load","i","s","o","r","a","m","document","q","push","l","Date","createElement","getElementsByTagName","async","src","parentNode","insertBefore","prototype","trackPageview","path","title","options","pageviewObject","page","extend","isEmptyObject","trackEvent","category","action","value","evt","hitType","eventCategory","eventAction","label","eventLabel","parseInt","isNaN","eventValue","nonInteraction","trackSocial","network","target","trackingOptions","socialNetwork","socialAction","socialTarget","addLinkedTrackerDomain","trackerId","name","domain","setDimension","index","String","window","GOVUKTracker","gifUrl","this","dimensions","sendToTracker","toString","payloadParams","type","payload","data","eventType","referrer","gaClientId","windowWidth","innerWidth","windowHeight","innerHeight","screenWidth","screen","width","screenHeight","height","colorDepth","performance","k","navigationType","navigation","redirectCount","timing","v","sendData","params","url","param","get","ready","tracker","bind","Analytics","config","trackers","universalId","govukTrackerUrl","sendToTrackers","method","args","length","fn","trackShare","location","pathname","analyticsPlugins","externalLinkTracker","externalLinkSelector","getHostname","on","$link","$target","is","parents","getLinkFromEvent","transport","href","attr","linkText","trim","text","analytics","hostname","formErrorTracker","errors","trackError","error","$error","errorText","errorID","questionText","legendText","$element","elementID","prop","nodeName","getElementById","toLowerCase","closest","find","getQuestionText","optionsGlobal","analyticsSetup","gaConfig","sessionId","ANONYMOUS_SESSION_ID","releaseTag","RELEASE_TAG","pageviewOptions"],"mappings":"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","file":"custom-analytics.js","sourcesContent":[";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  var GoogleAnalyticsUniversalTracker = function (trackingId, fieldsObject) {\n    function configureProfile () {\n      // https://developers.google.com/analytics/devguides/collection/analyticsjs/command-queue-reference#create\n      sendToGa('create', trackingId, fieldsObject)\n    }\n\n    function anonymizeIp () {\n      // https://developers.google.com/analytics/devguides/collection/analyticsjs/advanced#anonymizeip\n      sendToGa('set', 'anonymizeIp', true)\n    }\n\n    function disableAdTracking () {\n      // https://support.google.com/analytics/answer/2444872?hl=en\n      sendToGa('set', 'displayFeaturesTask', null)\n    }\n\n    // Support legacy cookieDomain param\n    if (typeof fieldsObject === 'string') {\n      fieldsObject = { cookieDomain: fieldsObject }\n    }\n\n    configureProfile()\n    anonymizeIp()\n    disableAdTracking()\n  }\n\n  GoogleAnalyticsUniversalTracker.load = function () {\n    /* eslint-disable */\n    (function (i, s, o, g, r, a, m) { i['GoogleAnalyticsObject'] = r; i[r] = i[r] || function () {\n      (i[r].q = i[r].q || []).push(arguments) }, i[r].l = 1 * new Date(); a = s.createElement(o),\n                             m = s.getElementsByTagName(o)[0]; a.async = 1; a.src = g; m.parentNode.insertBefore(a, m)\n    })(global, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga')\n    /* eslint-enable */\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/pages\n  GoogleAnalyticsUniversalTracker.prototype.trackPageview = function (path, title, options) {\n    var pageviewObject\n\n    if (typeof path === 'string') {\n      pageviewObject = { page: path }\n    }\n\n    if (typeof title === 'string') {\n      pageviewObject = pageviewObject || {}\n      pageviewObject.title = title\n    }\n\n    // Set an options object for the pageview (e.g. transport, sessionControl)\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport\n    if (typeof options === 'object') {\n      pageviewObject = $.extend(pageviewObject || {}, options)\n    }\n\n    if (!$.isEmptyObject(pageviewObject)) {\n      sendToGa('send', 'pageview', pageviewObject)\n    } else {\n      sendToGa('send', 'pageview')\n    }\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n  GoogleAnalyticsUniversalTracker.prototype.trackEvent = function (category, action, options) {\n    options = options || {}\n    var value\n    var evt = {\n      hitType: 'event',\n      eventCategory: category,\n      eventAction: action\n    }\n\n    // Label is optional\n    if (typeof options.label === 'string') {\n      evt.eventLabel = options.label\n      delete options.label\n    }\n\n    // Value is optional, but when used must be an\n    // integer, otherwise the event will be invalid\n    // and not logged\n    if (options.value || options.value === 0) {\n      value = parseInt(options.value, 10)\n      if (typeof value === 'number' && !isNaN(value)) {\n        options.eventValue = value\n      }\n      delete options.value\n    }\n\n    // Prevents an event from affecting bounce rate\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/events#implementation\n    if (options.nonInteraction) {\n      options.nonInteraction = 1\n    }\n\n    if (typeof options === 'object') {\n      $.extend(evt, options)\n    }\n\n    sendToGa('send', evt)\n  }\n\n  /*\n    https://developers.google.com/analytics/devguides/collection/analyticsjs/social-interactions\n    network – The network on which the action occurs (e.g. Facebook, Twitter)\n    action – The type of action that happens (e.g. Like, Send, Tweet)\n    target – Specifies the target of a social interaction.\n             This value is typically a URL but can be any text.\n  */\n  GoogleAnalyticsUniversalTracker.prototype.trackSocial = function (network, action, target, options) {\n    var trackingOptions = {\n      'hitType': 'social',\n      'socialNetwork': network,\n      'socialAction': action,\n      'socialTarget': target\n    }\n\n    $.extend(trackingOptions, options)\n\n    sendToGa('send', trackingOptions)\n  }\n\n  /*\n   https://developers.google.com/analytics/devguides/collection/analyticsjs/cross-domain\n   trackerId - the UA account code to track the domain against\n   name      - name for the tracker\n   domain    - the domain to track\n  */\n  GoogleAnalyticsUniversalTracker.prototype.addLinkedTrackerDomain = function (trackerId, name, domain) {\n    sendToGa('create',\n             trackerId,\n             'auto',\n             {'name': name})\n    // Load the plugin.\n    sendToGa('require', 'linker')\n    sendToGa(name + '.require', 'linker')\n\n    // Define which domains to autoLink.\n    sendToGa('linker:autoLink', [domain])\n    sendToGa(name + '.linker:autoLink', [domain])\n\n    sendToGa(name + '.set', 'anonymizeIp', true)\n    sendToGa(name + '.set', 'displayFeaturesTask', null)\n    sendToGa(name + '.send', 'pageview')\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets\n  GoogleAnalyticsUniversalTracker.prototype.setDimension = function (index, value) {\n    sendToGa('set', 'dimension' + index, String(value))\n  }\n\n  function sendToGa () {\n    if (typeof global.ga === 'function') {\n      global.ga.apply(global, arguments)\n    }\n  }\n\n  GOVUK.GoogleAnalyticsUniversalTracker = GoogleAnalyticsUniversalTracker\n\n  global.GOVUK = GOVUK\n})(window)\n",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  var GOVUKTracker = function (gifUrl) {\n    this.gifUrl = gifUrl\n    this.dimensions = []\n  }\n\n  GOVUKTracker.load = function () {}\n\n  GOVUKTracker.prototype.trackPageview = function (path, title, options) {\n    var pageviewObject\n\n    if (typeof path === 'string') {\n      pageviewObject = { page: path }\n    }\n\n    if (typeof title === 'string') {\n      pageviewObject = pageviewObject || {}\n      pageviewObject.title = title\n    }\n\n    // Set an options object for the pageview (e.g. transport, sessionControl)\n    // https://developers.google.com/analytics/devguides/collection/analyticsjs/field-reference#transport\n    if (typeof options === 'object') {\n      pageviewObject = $.extend(pageviewObject || {}, options)\n    }\n\n    if (!$.isEmptyObject(pageviewObject)) {\n      this.sendToTracker('pageview', pageviewObject)\n    } else {\n      this.sendToTracker('pageview')\n    }\n  }\n\n  // https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n  GOVUKTracker.prototype.trackEvent = function (category, action, options) {\n    options = options || {}\n    var evt = {\n      eventCategory: category,\n      eventAction: action\n    }\n\n    if (options.label) {\n      evt.eventLabel = options.label\n      delete options.label\n    }\n\n    if (options.value) {\n      evt.eventValue = options.value.toString()\n      delete options.value\n    }\n\n    if (typeof options === 'object') {\n      $.extend(evt, options)\n    }\n\n    this.sendToTracker('event', evt)\n  }\n\n  GOVUKTracker.prototype.trackSocial = function (network, action, target, options) {\n    var trackingOptions = {\n      'socialNetwork': network,\n      'socialAction': action,\n      'socialTarget': target\n    }\n\n    $.extend(trackingOptions, options)\n\n    this.sendToTracker('social', trackingOptions)\n  }\n\n  GOVUKTracker.prototype.addLinkedTrackerDomain = function () { /* noop */ }\n\n  GOVUKTracker.prototype.setDimension = function (index, value) {\n    this.dimensions['dimension' + index] = value\n  }\n\n  GOVUKTracker.prototype.payloadParams = function (type, payload) {\n    var data = $.extend({},\n      payload,\n      this.dimensions,\n      {\n        eventType: type,\n        referrer: global.document.referrer,\n        gaClientId: this.gaClientId,\n        windowWidth: global.innerWidth,\n        windowHeight: global.innerHeight,\n        screenWidth: global.screen.width,\n        screenHeight: global.screen.height,\n        colorDepth: global.screen.colorDepth\n      }\n    )\n\n    if (global.performance) {\n      data.navigationType = global.performance.navigation.type.toString()\n      data.redirectCount = global.performance.navigation.redirectCount.toString()\n\n      for (var k in global.performance.timing) {\n        var v = global.performance.timing[k]\n        if (typeof v === 'string' || typeof v === 'number') {\n          data['timing_' + k] = v.toString()\n        }\n      }\n    }\n\n    return data\n  }\n\n  GOVUKTracker.prototype.sendData = function (params) {\n    var url = this.gifUrl + '?' + $.param(params)\n    $.get(url)\n  }\n\n  GOVUKTracker.prototype.sendToTracker = function (type, payload) {\n    $(global.document).ready(function () {\n      if (global.ga) {\n        global.ga(function (tracker) {\n          this.gaClientId = tracker.get('clientId')\n          this.sendData(this.payloadParams(type, payload))\n        }.bind(this))\n      } else {\n        this.sendData(this.payloadParams(type, payload))\n      }\n    }.bind(this))\n  }\n\n  GOVUK.GOVUKTracker = GOVUKTracker\n\n  global.GOVUK = GOVUK\n})(window)\n",";GOVUK.analyticsSetup = function(global) {\n  \"use strict\";\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n  var gaConfig = global.gaConfig || {}\n\n  // Load Google Analytics libraries\n  GOVUK.Analytics.load();\n\n  // Use document.domain in dev, preview and staging so that tracking works\n  // Otherwise explicitly set the domain as powerofattorneyrefund.service.justice.gov.uk.\n  var cookieDomain = (document.domain === 'powerofattorneyrefund.service.justice.gov.uk') ? '.powerofattorneyrefund.service.justice.gov.uk' : document.domain;\n\n  // Configure profiles and make interface public\n  // for custom dimensions, virtual pageviews and events\n  GOVUK.analytics = new GOVUK.Analytics({\n    universalId: gaConfig.universalId  || '',\n    cookieDomain: cookieDomain\n  });\n\n  // Set custom dimensions before tracking pageviews\n  if (typeof gaConfig.sessionId !== 'undefined') {\n    GOVUK.analytics.setDimension(gaConfig.dimensions.ANONYMOUS_SESSION_ID, gaConfig.sessionId)\n  }\n\n  if (typeof gaConfig.releaseTag !== 'undefined') {\n    GOVUK.analytics.setDimension(gaConfig.dimensions.RELEASE_TAG, gaConfig.releaseTag)\n  }\n  \n  // Activate any event plugins eg. print intent, error tracking\n  GOVUK.analyticsPlugins.formErrorTracker();\n  GOVUK.analyticsPlugins.externalLinkTracker();\n  \n  // Track initial pageview\n  if (typeof GOVUK.pageviewOptions !== 'undefined') {\n    GOVUK.analytics.trackPageview(null, null, GOVUK.pageviewOptions);\n  }\n  else {\n    GOVUK.analytics.trackPageview();\n  }\n\n};\n\nGOVUK.analyticsSetup(window)",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  GOVUK.analyticsPlugins = GOVUK.analyticsPlugins || {}\n  GOVUK.analyticsPlugins.externalLinkTracker = function () {\n    var currentHost = GOVUK.analyticsPlugins.externalLinkTracker.getHostname()\n    var externalLinkSelector = 'a[href^=\"http\"]:not(a[href*=\"' + currentHost + '\"])'\n\n    $('body').on('click', externalLinkSelector, trackClickEvent)\n\n    function trackClickEvent (evt) {\n      var $link = getLinkFromEvent(evt)\n      var options = {transport: 'beacon'}\n      var href = $link.attr('href')\n      var linkText = $.trim($link.text())\n\n      if (linkText) {\n        options.label = linkText\n      }\n\n      GOVUK.analytics.trackEvent('External Link Clicked', href, options)\n    }\n\n    function getLinkFromEvent (evt) {\n      var $target = $(evt.target)\n\n      if (!$target.is('a')) {\n        $target = $target.parents('a')\n      }\n\n      return $target\n    }\n  }\n\n  GOVUK.analyticsPlugins.externalLinkTracker.getHostname = function () {\n    return global.location.hostname\n  }\n\n  global.GOVUK = GOVUK\n})(window)\n",";(function (global) {\n  'use strict'\n\n  var $ = global.jQuery\n  var GOVUK = global.GOVUK || {}\n\n  GOVUK.analyticsPlugins = GOVUK.analyticsPlugins || {}\n  GOVUK.analyticsPlugins.formErrorTracker = function () {\n\n    var errorSummarySelector = '.error-summary-list a'\n\n    var errors = $('.error-summary-list li a')\n    for (var i = 0; i < errors.length; i++) {\n      trackError(errors[i])  \n    }\n\n    function trackError(error) {\n      var $error = $(error)\n      var errorText = $.trim($error.text())\n      var errorID = $error.attr('href')\n      var questionText = getQuestionText(error)\n\n      var actionLabel = errorID + ' - ' + errorText\n\n      var options = {\n        transport: 'beacon',\n        label: actionLabel\n      }\n\n      window.optionsGlobal = options\n\n      GOVUK.analytics.trackEvent('Error-field', questionText, options)\n    }\n\n    function getQuestionText(error) {\n      var $error = $(error)\n      var errorID = $error.attr('href')\n\n      var $element = $(errorID)\n      var isLegend = $element.is(\"legend\")      \n      var isInput = $element.is(\"input\")\n\n      var elementID = $element.prop('id')\n\n      var nodeName = document.getElementById(elementID).nodeName.toLowerCase()\n      var questionText\n      var legendText\n\n      if (nodeName === 'input') {\n        questionText = $.trim($('label[for=\"' + elementID + '\"] .question-text').text())\n        legendText = $.trim($element.closest('fieldset').find('legend').text())\n        questionText = legendText.length > 0 ? legendText + ': ' + questionText : questionText\n      }\n      else if (nodeName === 'legend') {\n        questionText = $.trim($element.find('.question-text').text())\n      }\n\n      return questionText\n    }\n  }\n\n  global.GOVUK = GOVUK\n})(window)\n"]}