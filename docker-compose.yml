version: '2'

services:
  router:
    image: registry.service.opg.digital/opg-nginx-router-1604:0.0.318
    links:
      - front
      - caseworker
      - api
      - maintenance

  # ---------------------------
  # Local Services

  local-config:
    container_name: refunds-local-config
    build:
      context: .
      dockerfile: local-config/Dockerfile
    depends_on:
      - dynamodb
      - postgres
    environment:
      AWS_ACCESS_KEY_ID: '-'
      AWS_SECRET_ACCESS_KEY: '-'
      AWS_ENDPOINT_DYNAMODB: dynamodb:8000

  # ---------------------------
  # Front

  public-web:
    container_name: public-front-web
    image: public-front-web
    depends_on:
      - public-app
    build:
      context: ./
      dockerfile: public-front/docker/web/Dockerfile
    environment:
      APP_HOST: public-app
      APP_PORT: 9000
      NGINX_LOG_LEVEL: warn

  public-app:
    container_name: public-front-app
    image: public-front-app
    build:
      context: ./
      dockerfile: public-front/docker/app/Dockerfile
    volumes:
      - ./public-front:/app
#    depends_on:
#      - dynamodb
#      - localstack
#      - local-config
    environment:
      OPG_LPA_STACK_NAME: 'local'
      OPG_LPA_STACK_ENVIRONMENT: 'dev'

      OPG_REFUNDS_PUBLIC_FRONT_SESSION_DYNAMODB_TABLE: 'Sessions'

      OPG_REFUNDS_BANK_HASH_SALT: 'test-salt'

      OPG_REFUNDS_PUBLIC_FRONT_BETA_LINK_SIGNATURE_KEY: '0000000000000000000000000000000000000000000000000000000000000000'
      OPG_REFUNDS_AD_LINK_SIGNATURE_KEY: '0000000000000000000000000000000000000000000000000000000000000000'

      OPG_REFUNDS_PUBLIC_FRONT_KMS_ENCRYPT_ENDPOINT: 'http://kms:8080'
      OPG_REFUNDS_PUBLIC_FRONT_KMS_ENCRYPT_KEY_ALIAS: 'alias/dev-local-testing'

      # Local only
      AWS_ACCESS_KEY_ID: '-'
      AWS_SECRET_ACCESS_KEY: '-'

      OPG_REFUNDS_PUBLIC_FRONT_SESSION_DYNAMODB_ENDPOINT: http://dynamodb:8000

      PHP_OPCACHE_VALIDATE_TIMESTAMPS: 1
      #ENABLE_XDEBUG: 'true'
      PHP_IDE_CONFIG: serverName=public-front-app
      XDEBUG_CONFIG: remote_host=host.docker.internal remote_enable=1

  public-composer:
    image: composer
    volumes:
      - ./public-front:/app
    command:
      - install
      - --prefer-dist
      - --no-suggest
      - --no-interaction
      - --no-scripts
      - --optimize-autoloader

  public-ssl:
    container_name: public-front-ssl
    image: fsouza/docker-ssl-proxy
    depends_on:
      - public-web
    ports:
      - 9002:443
    volumes:
      - ./local-ssl/certs:/etc/nginx/certs
    environment:
      DOMAIN: 'localhost'
      TARGET_HOST_HEADER: 'localhost:7002'
      SSL_PORT: '443'
      TARGET_HOST: 'public-web'
      TARGET_PORT: '80'

  # ---------------------------

  maintenance:
    build: ../opg-refunds-maintenance
    # Currently the registry has no images so we have to build locally
    # image: registry.service.opg.digital/opguk/lpa-refunds-maintenance
    volumes:
      - ../opg-refunds-maintenance:/app

  front:
    build: ./public-front
    # Currently the registry has no images so we have to build locally
    # image: registry.service.opg.digital/opguk/lpa-refunds-public-front
    volumes:
      - ./public-front:/app
    links:
      - postgres
      - dynamodb
      - kms

  caseworker:
    build: ./caseworker-front
    # Currently the registry has no images so we have to build locally
    # image: registry.service.opg.digital/opguk/lpa-refunds-caseworker-front
    volumes:
      - ./caseworker-front:/app
    links:
      - dynamodb
      - kms

  api:
    build: ./caseworker-api
    # Currently the registry has no images so we have to build locally
    # image: registry.service.opg.digital/opguk/lpa-refunds-caseworker-front
    volumes:
      - ./caseworker-api:/app
    links:
      - postgres
      - dynamodb

  postgres:
    image: postgres:9.6.2
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d

  dynamodb:
    image: forty8bit/dynamodb-local
    ports:
      - 8000:8000
    command: ["-sharedDb"]

  kms:
    image: nsmithuk/local-kms:2
    volumes:
      - ./local-kms:/init
    environment:
      REGION: eu-west-1

  sns:
    build: ./local-sns
